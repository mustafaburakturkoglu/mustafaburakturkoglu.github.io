{"id":5531,"date":"2022-03-31T16:13:03","date_gmt":"2022-03-31T23:13:03","guid":{"rendered":"https:\/\/dolby.io\/?p=5531"},"modified":"2022-04-19T18:17:40","modified_gmt":"2022-04-20T01:17:40","slug":"transcribing-dolby-io-communications-recordings-with-deepgram","status":"publish","type":"post","link":"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/","title":{"rendered":"Transcribing Dolby.io Communications Recordings with Deepgram"},"content":{"rendered":"\n<p>In this digital age where virtual conferences are a dime a dozen, we see a large number of them&nbsp;recorded for future records. There are many uses for these records, including sharing with people who were unable to attend live, distributing for use as training, and keeping&nbsp;backups&nbsp;for future reference. One aspect of these recordings that is taken for granted, however, is accessibility. In this blog, we will demonstrate how to take recordings from your Dolby.io Communications conferences, and use&nbsp;<a href=\"https:\/\/deepgram.com\/\">Deepgram<\/a>&nbsp;to transcribe them to text.<\/p>\n\n\n\n<p>Having text copies of your conference recordings is a good way to offer alternative ways to digest the information. Some people read faster than they listen to spoken&nbsp;words. Some people might not speak the same first language as the one in the conference, and are more comfortable reading it. Others might be hearing impaired, and prefer to read for the most amount of comfort. Whatever reason one might have, we want to make it simple to automate the transcription generation process. Here, we will be&nbsp;using the Dolby.io&nbsp;<a href=\"https:\/\/docs.dolby.io\/communications-apis\/reference\/authentication-api\">Communications&nbsp;REST APIs<\/a>&nbsp;in tandem with Deepgram&#8217;s&nbsp;<a href=\"https:\/\/developers.deepgram.com\/api-reference\/#transcription-prerecorded\">Pre-recorded Audio API<\/a>&nbsp;in Python as an example of how to generate this process.<\/p>\n\n\n\n<h2 id=\"TranscribingDolby.ioCommunicationsRecordingswithDeepgram-InstallingLibraries\">Installing Libraries<\/h2>\n\n\n\n<p>Before we&nbsp;begin coding,&nbsp;we need to ensure we have all the proper libraries for calling these APIs. We&nbsp;can do this with a simple&nbsp;pip&nbsp;command (use the appropriate pip command for your operating system):<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-bash\">pip3\u00a0install\u00a0asyncio deepgram-sdk dolbyio-rest-apis<\/code><\/pre>\n\n\n\n<p>This will install both the Dolby.io and Deepgram SDKs, as well as Python&#8217;s native asynchronous function library to aid us in calling the async requests the two SDKs use.<\/p>\n\n\n\n<p>It is also a good idea to sign up for a free <a href=\"https:\/\/dolby.io\/signup\">Dolby.io<\/a> and <a href=\"https:\/\/console.deepgram.com\/signup\">Deepgram<\/a> account if you haven&#8217;t already, to get your API credentials.<\/p>\n\n\n\n<h2 id=\"TranscribingDolby.ioCommunicationsRecordingswithDeepgram-ObtaininganAPIToken\">Obtaining an API Token<\/h2>\n\n\n\n<p>In order to use the Dolby.io Communications REST APIs, we need to first generate a temporary access token. This is to help prevent your permanent account credentials from being accidentally leaked, as the token will expire automatically. To learn more about this, read the&nbsp;<a href=\"https:\/\/docs.dolby.io\/communications-apis\/reference\/authentication-api\">documentation<\/a>. In this case, we want to fill in the consumer key and secret with our&nbsp;<a href=\"https:\/\/dashboard.dolby.io\/dashboard\/applications\/summary\">credentials<\/a>&nbsp;from our&nbsp;<strong>Communications APIs<\/strong>&nbsp;(not Media). We then call the&nbsp;<code>get_api_access_token<\/code>&nbsp;endpoint within a function so we can generate a fresh token every time we make another call.&nbsp;This is not the most secure way to handle this,&nbsp;but will ensure we don&#8217;t run into any expired credentials down the road. To learn more, see our&nbsp;<a href=\"https:\/\/docs.dolby.io\/communications-apis\/docs\/guides-security-best-practices\">security best practices guide<\/a>.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-python\">from dolbyio_rest_apis.communications import authentication\nimport asyncio\n \n# Input your Dolby.io Communications Credentials here\nCONSUMER_KEY = &quot;&lt;DOLBYIO_CONSUMER_KEY&gt;&quot;\nCONSUMER_SECRET = &quot;&lt;DOLBYIO_CONSUMER_SECRET&gt;&quot;\n \n# Create a function that will generate a new api access token when needed\nasync def gen_token():\n    response = await authentication.get_api_access_token(CONSUMER_KEY, CONSUMER_SECRET)\n    return response[&#039;access_token&#039;]\n \nprint(f&quot;Access Token: {await gen_token()}&quot;)<\/code><\/pre>\n\n\n\n<h2 id=\"TranscribingDolby.ioCommunicationsRecordingswithDeepgram-GettingtheConferenceID\">Getting the Conference ID<\/h2>\n\n\n\n<p>Now that we can call the Dolby.io APIs, we first want to get the internal conference ID of the recording we want to transcribe. We can do this by simply calling the&nbsp;<code>get_conferences<\/code>&nbsp;endpoint with our token.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-python\">from dolbyio_rest_apis.communications.monitor import conferences\n \nresponse = await conferences.get_conferences(await gen_token())\n# Save the most recent conference. Change &#039;-1&#039; to whichever conference you want.\nconfId = response[&#039;conferences&#039;][-1][&#039;confId&#039;]\nprint(confId)<\/code><\/pre>\n\n\n\n<p>Note that in this code sample, we are using the parameter:&nbsp;<code>[&#039;conferences&#039;][-1][&#039;confId&#039;]<\/code>. This will pull only the most recent conference in the list as noted by the &#8220;-1&#8221; array value. If you are automating this to work with every newly generated conference, this likely will not be an issue. However if you are looking to do this with a specific conference, we suggest using&nbsp;<a href=\"https:\/\/docs.dolby.io\/communications-apis\/reference\/get-conferences\">the optional parameters in the get_conferences endpoint<\/a>&nbsp;to obtain the desired conference ID.<\/p>\n\n\n\n<h2 id=\"TranscribingDolby.ioCommunicationsRecordingswithDeepgram-ObtainingtheRecording\">Obtaining the Recording<\/h2>\n\n\n\n<p>With the conference ID in hand, we can now call an endpoint to generate a URL that contains the audio file of our conference. For this code sample, we are using a&nbsp;<a href=\"https:\/\/docs.dolby.io\/communications-apis\/docs\/guides-dolby-voice\">Dolby Voice<\/a>&nbsp;conference, so we will use the endpoint to&nbsp;<a href=\"https:\/\/docs.dolby.io\/communications-apis\/reference\/get-dolby-voice-audio-recordings\">Get the Dolby Voice audio recording<\/a>. If you know you are not using Dolby Voice, you can use&nbsp;<a href=\"https:\/\/docs.dolby.io\/communications-apis\/reference\/get-mp3-recording\">this endpoint<\/a>&nbsp;instead. Note that we are only obtaining the audio track of the conference instead of both the audio and the video. This is for maximum file compatibility with the transcription software. Note that the URL produced is also temporary, and will expire after some time.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-python\">from dolbyio_rest_apis.communications.monitor import recordings\n \n# Save only the mp3 file and return as a URL.\n# If your conference does not use Dolby Voice, use &#039;download_mp3_recording&#039; instead.\n# https:\/\/github.com\/dolbyio-samples\/dolbyio-rest-apis-client-python\/blob\/main\/client\/src\/dolbyio_rest_apis\/communications\/monitor\/recordings.py\nresponse = await recordings.get_dolby_voice_recordings(await gen_token(), confId)\nrecording_url = response[&#039;url&#039;]\nprint(recording_url)<\/code><\/pre>\n\n\n\n<p>To help illustrate, here is an example conference recording made for transcription generated from the above code:<\/p>\n\n\n\n<figure class=\"wp-block-audio\"><audio controls src=\"https:\/\/dolby.io\/wp-content\/uploads\/2022\/03\/recording.m4a\"><\/audio><\/figure>\n\n\n\n<h2 id=\"TranscribingDolby.ioCommunicationsRecordingswithDeepgram-TranscodingitwithDeepgram\">Transcoding it with Deepgram<\/h2>\n\n\n\n<p>While Deepgram does work with local files,&nbsp;the presigned recording url&nbsp;saves us many steps avoiding the hassle of needing to download and upload a file to a secure server. With the URL,&nbsp;we can&nbsp;skip those&nbsp;steps&nbsp;and directly insert the URL into the code below adapted from their&nbsp;<a href=\"https:\/\/developers.deepgram.com\/documentation\/getting-started\/prerecorded\/\">Python Getting Started Guide<\/a>. The code provided only uses the&nbsp;<a href=\"https:\/\/developers.deepgram.com\/documentation\/features\/punctuate\/\">Punctuation feature<\/a>, but could easily expanded with an assortment of&nbsp;<a href=\"https:\/\/developers.deepgram.com\/documentation\/features\/\">the many features<\/a>&nbsp;Deepgram provides.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-python\">from deepgram import Deepgram\n \n# Your Deepgram API Key\nDEEPGRAM_API_KEY = &#039;&lt;DEEPGRAM_API_KEY&gt;&#039;\n \n# Location of the file you want to transcribe. Should include filename and extension.\nFILE = recording_url\n \nasync def main():\n \n  # Initialize the Deepgram SDK\n  deepgram = Deepgram(DEEPGRAM_API_KEY)\n   \n  # file is remote\n  # Set the source\n  source = {\n    &#039;url&#039;: FILE\n  }\n \n  # Send the audio to Deepgram and get the response\n  response = await asyncio.create_task(\n    deepgram.transcription.prerecorded(\n      source,\n      {\n        &#039;punctuate&#039;: True\n      }\n    )\n  )\n \n  # Write only the transcript to the console\n  print(response[&#039;results&#039;][&#039;channels&#039;][0][&#039;alternatives&#039;][0][&#039;transcript&#039;])\n \ntry:\n  await main()\n  # If not running in a Jupyter notebook, run main with this line instead:\n  # asyncio.run(main())\nexcept Exception as e:\n  exception_type, exception_object, exception_traceback = sys.exc_info()\n  line_number = exception_traceback.tb_lineno\n  print(f&#039;line {line_number}: {exception_type} - {e}&#039;)<\/code><\/pre>\n\n\n\n<p>The Deepgram response provides many datapoints related to our speech, but to pull only the transcription of the file, we are calling&nbsp;<code>[&#039;results&#039;][&#039;channels&#039;][0][&#039;alternatives&#039;][0][&#039;transcript&#039;]<\/code>. Feel free to modify the response to generate whatever is most relevant to your needs. For the above sample provided, the result of the transcription is as follows:<\/p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Following text is a transcription of the s en of the parchment declaration of independence. The document on display in the rot the national archives Museum. The spelling and punctuation reflects the originals.<\/p><\/blockquote>\n\n\n\n<h2 id=\"TranscribingDolby.ioCommunicationsRecordingswithDeepgram-NextSteps\">Next Steps<\/h2>\n\n\n\n<p>This is a very basic&nbsp;foray&nbsp;in how to get started with transcribing your conference recordings. We heavily suggest you invest some time into expanding this to fit your specific use case to maximize the benefit you get from using these tools.<\/p>\n\n\n\n<p>As mentioned before, we suggest taking a look at what Deepgram has to offer in terms of additional features you could add on to the transcription process.&nbsp;For example:&nbsp;<\/p>\n\n\n\n<ul><li><a href=\"https:\/\/developers.deepgram.com\/documentation\/features\/diarize\/\">Diarization<\/a>&nbsp;can help differentiate who is saying what when there are multiple people in a conference.<\/li><li><a href=\"https:\/\/developers.deepgram.com\/documentation\/features\/named-entity-recognition\/\">Named Entity Recognition<\/a>&nbsp;and\/or&nbsp;<a href=\"https:\/\/developers.deepgram.com\/documentation\/features\/keywords\/\">Keywords<\/a>&nbsp;to help increase accuracy by providing prior information of things like names and proper nouns.&nbsp;<\/li><\/ul>\n\n\n\n<p>The transcription of the example recording was not perfect. There are many reasons for this,&nbsp;including&nbsp;imperfect recording environments, confusing speech patterns, and compression as examples. To help give the transcription algorithms a better chance, one option could be to use the Dolby.io&nbsp;<a href=\"https:\/\/docs.dolby.io\/media-apis\/docs\/enhance-api-guide\">Media Enhance API<\/a>&nbsp;to attempt to clean up the audio before sending it to transcription.<\/p>\n\n\n\n<p>If you want to automatically&nbsp;generate&nbsp;a transcription after every recording is over, we can take advantage of&nbsp;<a href=\"https:\/\/docs.dolby.io\/communications-apis\/docs\/webhooks-overview\">webhooks<\/a>&nbsp;to remove the manual intervention for you. In fact, the&nbsp;<a href=\"https:\/\/docs.dolby.io\/communications-apis\/docs\/webhooks-events-recordingaudioavailable\">Recording.Audio.Available<\/a>&nbsp;event provides the recording URL within the event body itself, reducing the number of steps needed to obtain it.<\/p>\n\n\n\n<p>One final idea is if you do only have the video file ready for whatever reason, you can use the Dolby.io&nbsp;<a href=\"https:\/\/docs.dolby.io\/media-apis\/docs\/transcode-api-guide\">Media Transcode API<\/a>&nbsp;to convert the video file into a format accepted by the transcription service.<\/p>\n\n\n\n<p>You can find the source code file stored in a&nbsp;<a href=\"https:\/\/jupyter.org\/\">Jupyter<\/a>&nbsp;notebook at&nbsp;<a href=\"https:\/\/github.com\/dolbyio-samples\/blog-deepgram-transcribe\/tree\/main\">this GitHub repository<\/a>.&nbsp;If you run into any issues, don&#8217;t hesitate to&nbsp;<a href=\"https:\/\/support.dolby.io\/hc\/en-au\">contact our support team<\/a>&nbsp;for help, and good luck coding!<\/p>\n","protected":false},"excerpt":{"rendered":"<p>A tutorial on how to use the Dolby.io Communications REST API to generate the recordings of your conferences, then transcribe them with Deepgram&#8217;s &#8220;Transcribe Pre-recorded Audio&#8221; API.<\/p>\n","protected":false},"author":29,"featured_media":5533,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"inline_featured_image":false,"_genesis_hide_title":false,"_genesis_hide_breadcrumbs":false,"_genesis_hide_singular_image":false,"_genesis_hide_footer_widgets":false,"_genesis_custom_body_class":"","_genesis_custom_post_class":"","_genesis_layout":""},"categories":[11,9],"tags":[23,41],"acf":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO Premium plugin v17.2 (Yoast SEO v18.5.1) - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Transcribing Dolby.io Communications Recordings with Deepgram - Dolby.io<\/title>\n<meta name=\"description\" content=\"A tutorial on how to use the Dolby.io Communications REST API to generate the recordings of your conferences, then transcribe them with Deepgram&#039;s &quot;Transcribe Pre-recorded Audio&quot; API.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Transcribing Dolby.io Communications Recordings with Deepgram\" \/>\n<meta property=\"og:description\" content=\"A tutorial on how to use the Dolby.io Communications REST API to generate the recordings of your conferences, then transcribe them with Deepgram&#039;s &quot;Transcribe Pre-recorded Audio&quot; API.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/\" \/>\n<meta property=\"og:site_name\" content=\"Dolby.io\" \/>\n<meta property=\"article:published_time\" content=\"2022-03-31T23:13:03+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-04-20T01:17:40+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/dolby.io\/wp-content\/uploads\/2022\/03\/Transcribing-DolbyIO-Communications-Recordings-with-Deepgram.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"1088\" \/>\n\t<meta property=\"og:image:height\" content=\"450\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/jpeg\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Griffin Solot-Kehl\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"6 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/dolby.io\/#organization\",\"name\":\"Dolby.io\",\"url\":\"https:\/\/dolby.io\/\",\"sameAs\":[],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/dolby.io\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/dolby.io\/wp-content\/uploads\/2021\/07\/DolbyIO-favicon.png\",\"contentUrl\":\"https:\/\/dolby.io\/wp-content\/uploads\/2021\/07\/DolbyIO-favicon.png\",\"width\":512,\"height\":512,\"caption\":\"Dolby.io\"},\"image\":{\"@id\":\"https:\/\/dolby.io\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/dolby.io\/#website\",\"url\":\"https:\/\/dolby.io\/\",\"name\":\"Dolby.io\",\"description\":\"Dolby.io\",\"publisher\":{\"@id\":\"https:\/\/dolby.io\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/dolby.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/dolby.io\/wp-content\/uploads\/2022\/03\/Transcribing-DolbyIO-Communications-Recordings-with-Deepgram.jpg\",\"contentUrl\":\"https:\/\/dolby.io\/wp-content\/uploads\/2022\/03\/Transcribing-DolbyIO-Communications-Recordings-with-Deepgram.jpg\",\"width\":1088,\"height\":450},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/#webpage\",\"url\":\"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/\",\"name\":\"Transcribing Dolby.io Communications Recordings with Deepgram - Dolby.io\",\"isPartOf\":{\"@id\":\"https:\/\/dolby.io\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/#primaryimage\"},\"datePublished\":\"2022-03-31T23:13:03+00:00\",\"dateModified\":\"2022-04-20T01:17:40+00:00\",\"description\":\"A tutorial on how to use the Dolby.io Communications REST API to generate the recordings of your conferences, then transcribe them with Deepgram's \\\"Transcribe Pre-recorded Audio\\\" API.\",\"breadcrumb\":{\"@id\":\"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/dolby.io\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Transcribing Dolby.io Communications Recordings with Deepgram\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/#webpage\"},\"author\":{\"@id\":\"https:\/\/dolby.io\/#\/schema\/person\/5aa9b60235fc77c73d27b90d71da5c30\"},\"headline\":\"Transcribing Dolby.io Communications Recordings with Deepgram\",\"datePublished\":\"2022-03-31T23:13:03+00:00\",\"dateModified\":\"2022-04-20T01:17:40+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/#webpage\"},\"wordCount\":1200,\"publisher\":{\"@id\":\"https:\/\/dolby.io\/#organization\"},\"image\":{\"@id\":\"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/dolby.io\/wp-content\/uploads\/2022\/03\/Transcribing-DolbyIO-Communications-Recordings-with-Deepgram.jpg\",\"keywords\":[\"python\",\"transcription\"],\"articleSection\":[\"Communications\",\"Developer\"],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/dolby.io\/#\/schema\/person\/5aa9b60235fc77c73d27b90d71da5c30\",\"name\":\"Griffin Solot-Kehl\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/dolby.io\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/9d1b582a6066653b672641639c13ceff?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/9d1b582a6066653b672641639c13ceff?s=96&d=mm&r=g\",\"caption\":\"Griffin Solot-Kehl\"},\"url\":\"https:\/\/dolby.io\/blog\/author\/gsolo\/\"}]}<\/script>\n<!-- \/ Yoast SEO Premium plugin. -->","yoast_head_json":{"title":"Transcribing Dolby.io Communications Recordings with Deepgram - Dolby.io","description":"A tutorial on how to use the Dolby.io Communications REST API to generate the recordings of your conferences, then transcribe them with Deepgram's \"Transcribe Pre-recorded Audio\" API.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/","og_locale":"en_US","og_type":"article","og_title":"Transcribing Dolby.io Communications Recordings with Deepgram","og_description":"A tutorial on how to use the Dolby.io Communications REST API to generate the recordings of your conferences, then transcribe them with Deepgram's \"Transcribe Pre-recorded Audio\" API.","og_url":"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/","og_site_name":"Dolby.io","article_published_time":"2022-03-31T23:13:03+00:00","article_modified_time":"2022-04-20T01:17:40+00:00","og_image":[{"width":1088,"height":450,"url":"https:\/\/dolby.io\/wp-content\/uploads\/2022\/03\/Transcribing-DolbyIO-Communications-Recordings-with-Deepgram.jpg","type":"image\/jpeg"}],"twitter_card":"summary_large_image","twitter_misc":{"Written by":"Griffin Solot-Kehl","Est. reading time":"6 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Organization","@id":"https:\/\/dolby.io\/#organization","name":"Dolby.io","url":"https:\/\/dolby.io\/","sameAs":[],"logo":{"@type":"ImageObject","@id":"https:\/\/dolby.io\/#logo","inLanguage":"en-US","url":"https:\/\/dolby.io\/wp-content\/uploads\/2021\/07\/DolbyIO-favicon.png","contentUrl":"https:\/\/dolby.io\/wp-content\/uploads\/2021\/07\/DolbyIO-favicon.png","width":512,"height":512,"caption":"Dolby.io"},"image":{"@id":"https:\/\/dolby.io\/#logo"}},{"@type":"WebSite","@id":"https:\/\/dolby.io\/#website","url":"https:\/\/dolby.io\/","name":"Dolby.io","description":"Dolby.io","publisher":{"@id":"https:\/\/dolby.io\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/dolby.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/#primaryimage","inLanguage":"en-US","url":"https:\/\/dolby.io\/wp-content\/uploads\/2022\/03\/Transcribing-DolbyIO-Communications-Recordings-with-Deepgram.jpg","contentUrl":"https:\/\/dolby.io\/wp-content\/uploads\/2022\/03\/Transcribing-DolbyIO-Communications-Recordings-with-Deepgram.jpg","width":1088,"height":450},{"@type":"WebPage","@id":"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/#webpage","url":"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/","name":"Transcribing Dolby.io Communications Recordings with Deepgram - Dolby.io","isPartOf":{"@id":"https:\/\/dolby.io\/#website"},"primaryImageOfPage":{"@id":"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/#primaryimage"},"datePublished":"2022-03-31T23:13:03+00:00","dateModified":"2022-04-20T01:17:40+00:00","description":"A tutorial on how to use the Dolby.io Communications REST API to generate the recordings of your conferences, then transcribe them with Deepgram's \"Transcribe Pre-recorded Audio\" API.","breadcrumb":{"@id":"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/dolby.io\/"},{"@type":"ListItem","position":2,"name":"Transcribing Dolby.io Communications Recordings with Deepgram"}]},{"@type":"Article","@id":"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/#article","isPartOf":{"@id":"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/#webpage"},"author":{"@id":"https:\/\/dolby.io\/#\/schema\/person\/5aa9b60235fc77c73d27b90d71da5c30"},"headline":"Transcribing Dolby.io Communications Recordings with Deepgram","datePublished":"2022-03-31T23:13:03+00:00","dateModified":"2022-04-20T01:17:40+00:00","mainEntityOfPage":{"@id":"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/#webpage"},"wordCount":1200,"publisher":{"@id":"https:\/\/dolby.io\/#organization"},"image":{"@id":"https:\/\/dolby.io\/blog\/transcribing-dolby-io-communications-recordings-with-deepgram\/#primaryimage"},"thumbnailUrl":"https:\/\/dolby.io\/wp-content\/uploads\/2022\/03\/Transcribing-DolbyIO-Communications-Recordings-with-Deepgram.jpg","keywords":["python","transcription"],"articleSection":["Communications","Developer"],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/dolby.io\/#\/schema\/person\/5aa9b60235fc77c73d27b90d71da5c30","name":"Griffin Solot-Kehl","image":{"@type":"ImageObject","@id":"https:\/\/dolby.io\/#personlogo","inLanguage":"en-US","url":"https:\/\/secure.gravatar.com\/avatar\/9d1b582a6066653b672641639c13ceff?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/9d1b582a6066653b672641639c13ceff?s=96&d=mm&r=g","caption":"Griffin Solot-Kehl"},"url":"https:\/\/dolby.io\/blog\/author\/gsolo\/"}]}},"uagb_featured_image_src":{"full":["https:\/\/dolby.io\/wp-content\/uploads\/2022\/03\/Transcribing-DolbyIO-Communications-Recordings-with-Deepgram.jpg",1088,450,false],"thumbnail":["https:\/\/dolby.io\/wp-content\/uploads\/2022\/03\/Transcribing-DolbyIO-Communications-Recordings-with-Deepgram-150x150.jpg",150,150,true],"medium":["https:\/\/dolby.io\/wp-content\/uploads\/2022\/03\/Transcribing-DolbyIO-Communications-Recordings-with-Deepgram-300x124.jpg",300,124,true],"medium_large":["https:\/\/dolby.io\/wp-content\/uploads\/2022\/03\/Transcribing-DolbyIO-Communications-Recordings-with-Deepgram-768x318.jpg",768,318,true],"large":["https:\/\/dolby.io\/wp-content\/uploads\/2022\/03\/Transcribing-DolbyIO-Communications-Recordings-with-Deepgram-1024x424.jpg",1024,424,true],"1536x1536":["https:\/\/dolby.io\/wp-content\/uploads\/2022\/03\/Transcribing-DolbyIO-Communications-Recordings-with-Deepgram.jpg",1088,450,false],"2048x2048":["https:\/\/dolby.io\/wp-content\/uploads\/2022\/03\/Transcribing-DolbyIO-Communications-Recordings-with-Deepgram.jpg",1088,450,false],"featured-page":["https:\/\/dolby.io\/wp-content\/uploads\/2022\/03\/Transcribing-DolbyIO-Communications-Recordings-with-Deepgram-1088x400.jpg",1088,400,true],"gb-block-post-grid-landscape":["https:\/\/dolby.io\/wp-content\/uploads\/2022\/03\/Transcribing-DolbyIO-Communications-Recordings-with-Deepgram-600x400.jpg",600,400,true],"gb-block-post-grid-square":["https:\/\/dolby.io\/wp-content\/uploads\/2022\/03\/Transcribing-DolbyIO-Communications-Recordings-with-Deepgram-600x450.jpg",600,450,true]},"uagb_author_info":{"display_name":"Griffin Solot-Kehl","author_link":"https:\/\/dolby.io\/blog\/author\/gsolo\/"},"uagb_comment_info":0,"uagb_excerpt":"A tutorial on how to use the Dolby.io Communications REST API to generate the recordings of your conferences, then transcribe them with Deepgram's \"Transcribe Pre-recorded Audio\" API.","featured_image_src":"https:\/\/dolby.io\/wp-content\/uploads\/2022\/03\/Transcribing-DolbyIO-Communications-Recordings-with-Deepgram-600x400.jpg","featured_image_src_square":"https:\/\/dolby.io\/wp-content\/uploads\/2022\/03\/Transcribing-DolbyIO-Communications-Recordings-with-Deepgram-600x450.jpg","author_info":{"display_name":"Griffin Solot-Kehl","author_link":"https:\/\/dolby.io\/blog\/author\/gsolo\/"},"_links":{"self":[{"href":"https:\/\/dolby.io\/wp-json\/wp\/v2\/posts\/5531"}],"collection":[{"href":"https:\/\/dolby.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/dolby.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/dolby.io\/wp-json\/wp\/v2\/users\/29"}],"replies":[{"embeddable":true,"href":"https:\/\/dolby.io\/wp-json\/wp\/v2\/comments?post=5531"}],"version-history":[{"count":0,"href":"https:\/\/dolby.io\/wp-json\/wp\/v2\/posts\/5531\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/dolby.io\/wp-json\/wp\/v2\/media\/5533"}],"wp:attachment":[{"href":"https:\/\/dolby.io\/wp-json\/wp\/v2\/media?parent=5531"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/dolby.io\/wp-json\/wp\/v2\/categories?post=5531"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/dolby.io\/wp-json\/wp\/v2\/tags?post=5531"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}